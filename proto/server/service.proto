syntax = "proto3";

package proto;

// This import requires the files to be locally available
import "proto/google/api/annotations.proto";

// import "google/protobuf/empty.proto";

option go_package = "grpc-go/gen/proto/go/proto;proto";

service IdentityService {
  rpc CurrentUser(CurrentUserRequest) returns (CurrentUserReponse) {
    option (google.api.http) = {
      get: "/user"
    };
  }
  rpc Login(LoginRequest) returns (LoginReponse) {
    option (google.api.http) = {
      post: "/login"
      body: "*"
    };
  }
  rpc Logout(LogoutRequest) returns (LogoutReponse) {
    option (google.api.http) = {
      post: "/logout"
      body: "*"
    };
  }
  rpc Refresh(RefreshRequest) returns (RefreshReponse) {
    option (google.api.http) = {
      get: "/refresh"
    };
  }
  rpc RegisterStart(RegisterStartRequest) returns (RegisterStartReponse) {
    option (google.api.http) = {
      post: "/register"
      body: "*"
    };
  }
  rpc RegisterPending(RegisterPendingRequest) returns (RegisterPendingReponse) {
    option (google.api.http) = {
      get: "/register/{key}"
    };
  }
  rpc RegisterFinish(RegisterFinishRequest) returns (RegisterFinishReponse) {
    option (google.api.http) = {
      post: "/register/{key}"
      body: "*"
    };
  }
}

message CurrentUserRequest {}
message CurrentUserReponse {
	string uid = 1;
}

message LoginRequest {
	string email = 1;
	string password = 2;
}
message LoginReponse {}

message LogoutRequest {
  string refresh_token = 1;
}
message LogoutReponse {}

message RefreshRequest {
  string refresh_token = 1;
}
message RefreshReponse {}

message RegisterStartRequest {
  string email = 1;
}
message RegisterStartReponse {
}
message RegisterPendingRequest {
  string key = 1;
}
message RegisterPendingReponse {
  string email = 1;
}
message RegisterFinishRequest {
  string key = 1;
  string display_name = 2;
	string password = 3;
}
message RegisterFinishReponse {
  string id = 1;
}